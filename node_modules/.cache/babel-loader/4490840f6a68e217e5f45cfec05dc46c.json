{"ast":null,"code":"import _toConsumableArray from \"/Users/charlie/code/ex/exhiibeo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/charlie/code/ex/exhiibeo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/charlie/code/ex/exhiibeo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/charlie/code/ex/exhiibeo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { Serializer } from '../../Serializer';\nimport { ExtensionMessageTarget, NetworkType } from '../..';\nimport { windowRef } from '../../MockWindow';\nimport { getTzip10Link } from '../../utils/get-tzip10-link';\nimport { isAndroid, isIOS } from '../../utils/platform';\nimport { PostMessageTransport } from '../../transports/PostMessageTransport';\nimport { desktopList, extensionList, iOSList, webList } from './wallet-lists';\nvar serializer = new Serializer();\nvar defaultExtensions = ['ookjlbkiijinhpmnjffcofjonbfbgaoc', 'gpfndedineagiepkpinficbcbbgjoenn' // Beacon\n];\nexport var Platform;\n\n(function (Platform) {\n  Platform[Platform[\"DESKTOP\"] = 0] = \"DESKTOP\";\n  Platform[Platform[\"IOS\"] = 1] = \"IOS\";\n  Platform[Platform[\"ANDROID\"] = 2] = \"ANDROID\";\n})(Platform || (Platform = {}));\n\nexport var WalletType;\n\n(function (WalletType) {\n  WalletType[\"IOS\"] = \"ios\";\n  WalletType[\"ANDROID\"] = \"android\";\n  WalletType[\"EXTENSION\"] = \"extension\";\n  WalletType[\"DESKTOP\"] = \"desktop\";\n  WalletType[\"WEB\"] = \"web\";\n})(WalletType || (WalletType = {}));\n/**\n * @internalapi\n *\n */\n\n\nexport var Pairing = /*#__PURE__*/function () {\n  function Pairing() {\n    _classCallCheck(this, Pairing);\n  }\n\n  _createClass(Pairing, null, [{\n    key: \"getPlatfrom\",\n    value: function getPlatfrom() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", isAndroid(window) ? Platform.ANDROID : isIOS(window) ? Platform.IOS : Platform.DESKTOP);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    }\n  }, {\n    key: \"getPairingInfo\",\n    value: function getPairingInfo(pairingPayload, statusUpdateHandler, mobileWalletHandler, platform) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var activePlatform, pairingCode, postmessageSyncCode, preferredNetwork;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(platform !== null && platform !== void 0)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                _context2.t0 = platform;\n                _context2.next = 7;\n                break;\n\n              case 4:\n                _context2.next = 6;\n                return Pairing.getPlatfrom();\n\n              case 6:\n                _context2.t0 = _context2.sent;\n\n              case 7:\n                activePlatform = _context2.t0;\n                pairingCode = pairingPayload.p2pSyncCode;\n                postmessageSyncCode = pairingPayload.postmessageSyncCode;\n                preferredNetwork = pairingPayload.preferredNetwork;\n                _context2.t1 = activePlatform;\n                _context2.next = _context2.t1 === Platform.DESKTOP ? 14 : _context2.t1 === Platform.IOS ? 15 : _context2.t1 === Platform.ANDROID ? 16 : 17;\n                break;\n\n              case 14:\n                return _context2.abrupt(\"return\", Pairing.getDesktopPairingAlert(pairingCode, statusUpdateHandler, postmessageSyncCode, mobileWalletHandler, preferredNetwork));\n\n              case 15:\n                return _context2.abrupt(\"return\", Pairing.getIOSPairingAlert(pairingCode, statusUpdateHandler, preferredNetwork));\n\n              case 16:\n                return _context2.abrupt(\"return\", Pairing.getAndroidPairingAlert(pairingCode, statusUpdateHandler, preferredNetwork));\n\n              case 17:\n                throw new Error('platform unknown');\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n    }\n  }, {\n    key: \"getDesktopPairingAlert\",\n    value: function getDesktopPairingAlert(pairingCode, statusUpdateHandler, postmessageSyncCode, mobileWalletHandler, network) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var availableExtensions;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return PostMessageTransport.getAvailableExtensions();\n\n              case 2:\n                availableExtensions = _context6.sent;\n                availableExtensions.forEach(function (ext) {\n                  var index = defaultExtensions.indexOf(ext.id);\n\n                  if (index >= 0) {\n                    defaultExtensions.splice(index, 1);\n                  }\n                });\n                _context6.t0 = {\n                  title: 'Browser Extensions',\n                  type: WalletType.EXTENSION,\n                  wallets: [].concat(_toConsumableArray(availableExtensions.map(function (app) {\n                    var _a, _b, _c, _d, _e;\n\n                    var ext = extensionList.find(function (extEl) {\n                      return extEl.id === app.id;\n                    });\n                    return {\n                      key: (_a = ext === null || ext === void 0 ? void 0 : ext.key) !== null && _a !== void 0 ? _a : app.id,\n                      name: (_b = app.name) !== null && _b !== void 0 ? _b : ext === null || ext === void 0 ? void 0 : ext.name,\n                      logo: (_c = app.iconUrl) !== null && _c !== void 0 ? _c : ext === null || ext === void 0 ? void 0 : ext.logo,\n                      shortName: (_d = app.shortName) !== null && _d !== void 0 ? _d : ext === null || ext === void 0 ? void 0 : ext.shortName,\n                      color: (_e = app.color) !== null && _e !== void 0 ? _e : ext === null || ext === void 0 ? void 0 : ext.color,\n                      enabled: true,\n                      clickHandler: function clickHandler() {\n                        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                          var postmessageCode, message;\n                          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                            while (1) {\n                              switch (_context3.prev = _context3.next) {\n                                case 0:\n                                  if (!postmessageSyncCode) {\n                                    _context3.next = 10;\n                                    break;\n                                  }\n\n                                  _context3.t0 = serializer;\n                                  _context3.next = 4;\n                                  return postmessageSyncCode();\n\n                                case 4:\n                                  _context3.t1 = _context3.sent;\n                                  _context3.next = 7;\n                                  return _context3.t0.serialize.call(_context3.t0, _context3.t1);\n\n                                case 7:\n                                  postmessageCode = _context3.sent;\n                                  message = {\n                                    target: ExtensionMessageTarget.EXTENSION,\n                                    payload: postmessageCode,\n                                    targetId: app.id\n                                  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n                                  windowRef.postMessage(message, windowRef.location.origin);\n\n                                case 10:\n                                  statusUpdateHandler(WalletType.EXTENSION, this);\n\n                                case 11:\n                                case \"end\":\n                                  return _context3.stop();\n                              }\n                            }\n                          }, _callee3, this);\n                        }));\n                      }\n                    };\n                  })), _toConsumableArray(extensionList.filter(function (app) {\n                    return defaultExtensions.some(function (extId) {\n                      return extId === app.id;\n                    });\n                  }).map(function (app) {\n                    return {\n                      key: app.key,\n                      name: app.name,\n                      shortName: app.shortName,\n                      color: app.color,\n                      logo: app.logo,\n                      enabled: false,\n                      clickHandler: function clickHandler() {// Don't do anything\n                      }\n                    };\n                  }))).sort(function (a, b) {\n                    return a.key.localeCompare(b.key);\n                  })\n                };\n                _context6.t1 = WalletType.DESKTOP;\n                _context6.t2 = [];\n                _context6.t3 = _toConsumableArray(desktopList.map(function (app) {\n                  return {\n                    key: app.key,\n                    name: app.name,\n                    shortName: app.shortName,\n                    color: app.color,\n                    logo: app.logo,\n                    enabled: true,\n                    clickHandler: function clickHandler() {\n                      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                        var code, link;\n                        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                          while (1) {\n                            switch (_context4.prev = _context4.next) {\n                              case 0:\n                                _context4.t0 = serializer;\n                                _context4.next = 3;\n                                return pairingCode();\n\n                              case 3:\n                                _context4.t1 = _context4.sent;\n                                _context4.next = 6;\n                                return _context4.t0.serialize.call(_context4.t0, _context4.t1);\n\n                              case 6:\n                                code = _context4.sent;\n                                link = getTzip10Link(app.deepLink, code);\n                                window.open(link, '_blank');\n                                statusUpdateHandler(WalletType.DESKTOP, this, true);\n\n                              case 10:\n                              case \"end\":\n                                return _context4.stop();\n                            }\n                          }\n                        }, _callee4, this);\n                      }));\n                    }\n                  };\n                }));\n                _context6.t4 = _toConsumableArray;\n                _context6.next = 11;\n                return Pairing.getWebList(pairingCode, statusUpdateHandler, network);\n\n              case 11:\n                _context6.t5 = _context6.sent;\n                _context6.t6 = (0, _context6.t4)(_context6.t5);\n                _context6.t7 = _context6.t2.concat.call(_context6.t2, _context6.t3, _context6.t6).sort(function (a, b) {\n                  return a.key.localeCompare(b.key);\n                });\n                _context6.t8 = {\n                  title: 'Desktop & Web Wallets',\n                  type: _context6.t1,\n                  wallets: _context6.t7\n                };\n                _context6.t9 = {\n                  title: 'Mobile Wallets',\n                  type: WalletType.IOS,\n                  wallets: _toConsumableArray(iOSList.map(function (app) {\n                    return {\n                      key: app.key,\n                      name: app.name,\n                      shortName: app.shortName,\n                      color: app.color,\n                      logo: app.logo,\n                      enabled: true,\n                      clickHandler: function clickHandler() {\n                        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                          var code;\n                          return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                            while (1) {\n                              switch (_context5.prev = _context5.next) {\n                                case 0:\n                                  _context5.t0 = serializer;\n                                  _context5.next = 3;\n                                  return pairingCode();\n\n                                case 3:\n                                  _context5.t1 = _context5.sent;\n                                  _context5.next = 6;\n                                  return _context5.t0.serialize.call(_context5.t0, _context5.t1);\n\n                                case 6:\n                                  code = _context5.sent;\n                                  mobileWalletHandler(code);\n                                  statusUpdateHandler(WalletType.IOS, this, true);\n\n                                case 9:\n                                case \"end\":\n                                  return _context5.stop();\n                              }\n                            }\n                          }, _callee5, this);\n                        }));\n                      }\n                    };\n                  })).sort(function (a, b) {\n                    return a.key.localeCompare(b.key);\n                  })\n                };\n                _context6.t10 = [_context6.t0, _context6.t8, _context6.t9];\n                _context6.t11 = [];\n                return _context6.abrupt(\"return\", {\n                  walletLists: _context6.t10,\n                  buttons: _context6.t11\n                });\n\n              case 19:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n    }\n  }, {\n    key: \"getIOSPairingAlert\",\n    value: function getIOSPairingAlert(pairingCode, statusUpdateHandler, network) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.t0 = {\n                  title: 'Mobile Wallets',\n                  type: WalletType.IOS,\n                  wallets: iOSList.map(function (app) {\n                    return {\n                      key: app.key,\n                      name: app.name,\n                      shortName: app.shortName,\n                      color: app.color,\n                      logo: app.logo,\n                      enabled: true,\n                      clickHandler: function clickHandler() {\n                        var _a;\n\n                        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n                          var code, link, a;\n                          return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                            while (1) {\n                              switch (_context7.prev = _context7.next) {\n                                case 0:\n                                  _context7.t0 = serializer;\n                                  _context7.next = 3;\n                                  return pairingCode();\n\n                                case 3:\n                                  _context7.t1 = _context7.sent;\n                                  _context7.next = 6;\n                                  return _context7.t0.serialize.call(_context7.t0, _context7.t1);\n\n                                case 6:\n                                  code = _context7.sent;\n                                  link = getTzip10Link((_a = app.deepLink) !== null && _a !== void 0 ? _a : app.universalLink, code); // iOS does not trigger deeplinks with `window.open(...)`. The only way is using a normal link. So we have to work around that.\n\n                                  a = document.createElement('a');\n                                  a.setAttribute('href', link);\n                                  a.dispatchEvent(new MouseEvent('click', {\n                                    view: window,\n                                    bubbles: true,\n                                    cancelable: true\n                                  }));\n                                  statusUpdateHandler(WalletType.IOS, this, true);\n\n                                case 12:\n                                case \"end\":\n                                  return _context7.stop();\n                              }\n                            }\n                          }, _callee7, this);\n                        }));\n                      }\n                    };\n                  }).sort(function (a, b) {\n                    return a.key.localeCompare(b.key);\n                  })\n                };\n                _context8.t1 = WalletType.WEB;\n                _context8.t2 = _toConsumableArray;\n                _context8.next = 5;\n                return Pairing.getWebList(pairingCode, statusUpdateHandler, network);\n\n              case 5:\n                _context8.t3 = _context8.sent;\n                _context8.t4 = (0, _context8.t2)(_context8.t3).sort(function (a, b) {\n                  return a.key.localeCompare(b.key);\n                });\n                _context8.t5 = {\n                  title: 'Web Wallets',\n                  type: _context8.t1,\n                  wallets: _context8.t4\n                };\n                _context8.t6 = [_context8.t0, _context8.t5];\n                _context8.t7 = [];\n                return _context8.abrupt(\"return\", {\n                  walletLists: _context8.t6,\n                  buttons: _context8.t7\n                });\n\n              case 11:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n    }\n  }, {\n    key: \"getAndroidPairingAlert\",\n    value: function getAndroidPairingAlert(pairingCode, statusUpdateHandler, network) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.t0 = WalletType.WEB;\n                _context10.t1 = _toConsumableArray;\n                _context10.next = 4;\n                return Pairing.getWebList(pairingCode, statusUpdateHandler, network);\n\n              case 4:\n                _context10.t2 = _context10.sent;\n                _context10.t3 = (0, _context10.t1)(_context10.t2).sort(function (a, b) {\n                  return a.key.localeCompare(b.key);\n                });\n                _context10.t4 = {\n                  title: 'Web Wallets',\n                  type: _context10.t0,\n                  wallets: _context10.t3\n                };\n                _context10.t5 = [_context10.t4];\n                _context10.t6 = [{\n                  title: 'Mobile Wallets',\n                  text: 'Connect Wallet',\n                  clickHandler: function clickHandler() {\n                    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n                      var code, qrLink;\n                      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                        while (1) {\n                          switch (_context9.prev = _context9.next) {\n                            case 0:\n                              _context9.t0 = serializer;\n                              _context9.next = 3;\n                              return pairingCode();\n\n                            case 3:\n                              _context9.t1 = _context9.sent;\n                              _context9.next = 6;\n                              return _context9.t0.serialize.call(_context9.t0, _context9.t1);\n\n                            case 6:\n                              code = _context9.sent;\n                              qrLink = getTzip10Link('tezos://', code);\n                              window.open(qrLink, '_blank');\n                              statusUpdateHandler(WalletType.ANDROID);\n\n                            case 10:\n                            case \"end\":\n                              return _context9.stop();\n                          }\n                        }\n                      }, _callee9);\n                    }));\n                  }\n                }];\n                return _context10.abrupt(\"return\", {\n                  walletLists: _context10.t5,\n                  buttons: _context10.t6\n                });\n\n              case 10:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n    }\n  }, {\n    key: \"getWebList\",\n    value: function getWebList(pairingCode, statusUpdateHandler, network) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                return _context11.abrupt(\"return\", webList.map(function (app) {\n                  return {\n                    key: app.key,\n                    name: app.name,\n                    shortName: app.shortName,\n                    color: app.color,\n                    logo: app.logo,\n                    enabled: true,\n                    clickHandler: function clickHandler() {\n                      var _this2 = this;\n\n                      var newTab = window.open('', '_blank');\n                      pairingCode().then(function (code) {\n                        return serializer.serialize(code);\n                      }).then(function (code) {\n                        var _a;\n\n                        var link = getTzip10Link((_a = app.links[network]) !== null && _a !== void 0 ? _a : app.links[NetworkType.MAINNET], code);\n\n                        if (newTab) {\n                          newTab.location.href = link;\n                        } else {\n                          window.open(link, '_blank');\n                        }\n\n                        statusUpdateHandler(WalletType.WEB, _this2, true);\n                      }).catch(function (error) {\n                        // eslint-disable-next-line no-console\n                        console.error(error);\n                      });\n                    }\n                  };\n                }).sort(function (a, b) {\n                  return a.key.localeCompare(b.key);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n    }\n  }]);\n\n  return Pairing;\n}();","map":{"version":3,"sources":["../../../../src/ui/alert/Pairing.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Serializer } from '../../Serializer';\nimport { ExtensionMessageTarget, NetworkType } from '../..';\nimport { windowRef } from '../../MockWindow';\nimport { getTzip10Link } from '../../utils/get-tzip10-link';\nimport { isAndroid, isIOS } from '../../utils/platform';\nimport { PostMessageTransport } from '../../transports/PostMessageTransport';\nimport { desktopList, extensionList, iOSList, webList } from './wallet-lists';\nconst serializer = new Serializer();\nconst defaultExtensions = [\n    'ookjlbkiijinhpmnjffcofjonbfbgaoc',\n    'gpfndedineagiepkpinficbcbbgjoenn' // Beacon\n];\nexport var Platform;\n(function (Platform) {\n    Platform[Platform[\"DESKTOP\"] = 0] = \"DESKTOP\";\n    Platform[Platform[\"IOS\"] = 1] = \"IOS\";\n    Platform[Platform[\"ANDROID\"] = 2] = \"ANDROID\";\n})(Platform || (Platform = {}));\nexport var WalletType;\n(function (WalletType) {\n    WalletType[\"IOS\"] = \"ios\";\n    WalletType[\"ANDROID\"] = \"android\";\n    WalletType[\"EXTENSION\"] = \"extension\";\n    WalletType[\"DESKTOP\"] = \"desktop\";\n    WalletType[\"WEB\"] = \"web\";\n})(WalletType || (WalletType = {}));\n/**\n * @internalapi\n *\n */\nexport class Pairing {\n    static getPlatfrom() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return isAndroid(window) ? Platform.ANDROID : isIOS(window) ? Platform.IOS : Platform.DESKTOP;\n        });\n    }\n    static getPairingInfo(pairingPayload, statusUpdateHandler, mobileWalletHandler, platform) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const activePlatform = platform !== null && platform !== void 0 ? platform : (yield Pairing.getPlatfrom());\n            const pairingCode = pairingPayload.p2pSyncCode;\n            const postmessageSyncCode = pairingPayload.postmessageSyncCode;\n            const preferredNetwork = pairingPayload.preferredNetwork;\n            switch (activePlatform) {\n                case Platform.DESKTOP:\n                    return Pairing.getDesktopPairingAlert(pairingCode, statusUpdateHandler, postmessageSyncCode, mobileWalletHandler, preferredNetwork);\n                case Platform.IOS:\n                    return Pairing.getIOSPairingAlert(pairingCode, statusUpdateHandler, preferredNetwork);\n                case Platform.ANDROID:\n                    return Pairing.getAndroidPairingAlert(pairingCode, statusUpdateHandler, preferredNetwork);\n                default:\n                    throw new Error('platform unknown');\n            }\n        });\n    }\n    static getDesktopPairingAlert(pairingCode, statusUpdateHandler, postmessageSyncCode, mobileWalletHandler, network) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const availableExtensions = yield PostMessageTransport.getAvailableExtensions();\n            availableExtensions.forEach((ext) => {\n                const index = defaultExtensions.indexOf(ext.id);\n                if (index >= 0) {\n                    defaultExtensions.splice(index, 1);\n                }\n            });\n            return {\n                walletLists: [\n                    {\n                        title: 'Browser Extensions',\n                        type: WalletType.EXTENSION,\n                        wallets: [\n                            ...availableExtensions.map((app) => {\n                                var _a, _b, _c, _d, _e;\n                                const ext = extensionList.find((extEl) => extEl.id === app.id);\n                                return {\n                                    key: (_a = ext === null || ext === void 0 ? void 0 : ext.key) !== null && _a !== void 0 ? _a : app.id,\n                                    name: (_b = app.name) !== null && _b !== void 0 ? _b : ext === null || ext === void 0 ? void 0 : ext.name,\n                                    logo: (_c = app.iconUrl) !== null && _c !== void 0 ? _c : ext === null || ext === void 0 ? void 0 : ext.logo,\n                                    shortName: (_d = app.shortName) !== null && _d !== void 0 ? _d : ext === null || ext === void 0 ? void 0 : ext.shortName,\n                                    color: (_e = app.color) !== null && _e !== void 0 ? _e : ext === null || ext === void 0 ? void 0 : ext.color,\n                                    enabled: true,\n                                    clickHandler() {\n                                        return __awaiter(this, void 0, void 0, function* () {\n                                            if (postmessageSyncCode) {\n                                                const postmessageCode = yield serializer.serialize(yield postmessageSyncCode());\n                                                const message = {\n                                                    target: ExtensionMessageTarget.EXTENSION,\n                                                    payload: postmessageCode,\n                                                    targetId: app.id\n                                                };\n                                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                                windowRef.postMessage(message, windowRef.location.origin);\n                                            }\n                                            statusUpdateHandler(WalletType.EXTENSION, this);\n                                        });\n                                    }\n                                };\n                            }),\n                            ...extensionList\n                                .filter((app) => defaultExtensions.some((extId) => extId === app.id))\n                                .map((app) => ({\n                                key: app.key,\n                                name: app.name,\n                                shortName: app.shortName,\n                                color: app.color,\n                                logo: app.logo,\n                                enabled: false,\n                                clickHandler: () => {\n                                    // Don't do anything\n                                }\n                            }))\n                        ].sort((a, b) => a.key.localeCompare(b.key))\n                    },\n                    {\n                        title: 'Desktop & Web Wallets',\n                        type: WalletType.DESKTOP,\n                        wallets: [\n                            ...desktopList.map((app) => ({\n                                key: app.key,\n                                name: app.name,\n                                shortName: app.shortName,\n                                color: app.color,\n                                logo: app.logo,\n                                enabled: true,\n                                clickHandler() {\n                                    return __awaiter(this, void 0, void 0, function* () {\n                                        const code = yield serializer.serialize(yield pairingCode());\n                                        const link = getTzip10Link(app.deepLink, code);\n                                        window.open(link, '_blank');\n                                        statusUpdateHandler(WalletType.DESKTOP, this, true);\n                                    });\n                                }\n                            })),\n                            ...(yield Pairing.getWebList(pairingCode, statusUpdateHandler, network))\n                        ].sort((a, b) => a.key.localeCompare(b.key))\n                    },\n                    {\n                        title: 'Mobile Wallets',\n                        type: WalletType.IOS,\n                        wallets: [\n                            ...iOSList.map((app) => ({\n                                key: app.key,\n                                name: app.name,\n                                shortName: app.shortName,\n                                color: app.color,\n                                logo: app.logo,\n                                enabled: true,\n                                clickHandler() {\n                                    return __awaiter(this, void 0, void 0, function* () {\n                                        const code = yield serializer.serialize(yield pairingCode());\n                                        mobileWalletHandler(code);\n                                        statusUpdateHandler(WalletType.IOS, this, true);\n                                    });\n                                }\n                            }))\n                        ].sort((a, b) => a.key.localeCompare(b.key))\n                    }\n                ],\n                buttons: []\n            };\n        });\n    }\n    static getIOSPairingAlert(pairingCode, statusUpdateHandler, network) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return {\n                walletLists: [\n                    {\n                        title: 'Mobile Wallets',\n                        type: WalletType.IOS,\n                        wallets: iOSList\n                            .map((app) => ({\n                            key: app.key,\n                            name: app.name,\n                            shortName: app.shortName,\n                            color: app.color,\n                            logo: app.logo,\n                            enabled: true,\n                            clickHandler() {\n                                var _a;\n                                return __awaiter(this, void 0, void 0, function* () {\n                                    const code = yield serializer.serialize(yield pairingCode());\n                                    const link = getTzip10Link((_a = app.deepLink) !== null && _a !== void 0 ? _a : app.universalLink, code);\n                                    // iOS does not trigger deeplinks with `window.open(...)`. The only way is using a normal link. So we have to work around that.\n                                    const a = document.createElement('a');\n                                    a.setAttribute('href', link);\n                                    a.dispatchEvent(new MouseEvent('click', { view: window, bubbles: true, cancelable: true }));\n                                    statusUpdateHandler(WalletType.IOS, this, true);\n                                });\n                            }\n                        }))\n                            .sort((a, b) => a.key.localeCompare(b.key))\n                    },\n                    {\n                        title: 'Web Wallets',\n                        type: WalletType.WEB,\n                        wallets: [\n                            ...(yield Pairing.getWebList(pairingCode, statusUpdateHandler, network))\n                        ].sort((a, b) => a.key.localeCompare(b.key))\n                    }\n                ],\n                buttons: []\n            };\n        });\n    }\n    static getAndroidPairingAlert(pairingCode, statusUpdateHandler, network) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return {\n                walletLists: [\n                    {\n                        title: 'Web Wallets',\n                        type: WalletType.WEB,\n                        wallets: [\n                            ...(yield Pairing.getWebList(pairingCode, statusUpdateHandler, network))\n                        ].sort((a, b) => a.key.localeCompare(b.key))\n                    }\n                ],\n                buttons: [\n                    {\n                        title: 'Mobile Wallets',\n                        text: 'Connect Wallet',\n                        clickHandler: () => __awaiter(this, void 0, void 0, function* () {\n                            const code = yield serializer.serialize(yield pairingCode());\n                            const qrLink = getTzip10Link('tezos://', code);\n                            window.open(qrLink, '_blank');\n                            statusUpdateHandler(WalletType.ANDROID);\n                        })\n                    }\n                ]\n            };\n        });\n    }\n    static getWebList(pairingCode, statusUpdateHandler, network) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return webList\n                .map((app) => ({\n                key: app.key,\n                name: app.name,\n                shortName: app.shortName,\n                color: app.color,\n                logo: app.logo,\n                enabled: true,\n                clickHandler() {\n                    const newTab = window.open('', '_blank');\n                    pairingCode()\n                        .then((code) => serializer.serialize(code))\n                        .then((code) => {\n                        var _a;\n                        const link = getTzip10Link((_a = app.links[network]) !== null && _a !== void 0 ? _a : app.links[NetworkType.MAINNET], code);\n                        if (newTab) {\n                            newTab.location.href = link;\n                        }\n                        else {\n                            window.open(link, '_blank');\n                        }\n                        statusUpdateHandler(WalletType.WEB, this, true);\n                    })\n                        .catch((error) => {\n                        // eslint-disable-next-line no-console\n                        console.error(error);\n                    });\n                }\n            }))\n                .sort((a, b) => a.key.localeCompare(b.key));\n        });\n    }\n}\n//# sourceMappingURL=Pairing.js.map"]},"metadata":{},"sourceType":"module"}